name: Automated Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-west-1
      ECR_ACCOUNT_URL: 361568250748.dkr.ecr.us-west-1.amazonaws.com
      FRONTEND_IMAGE: itopsfrontend
      BACKEND_IMAGE: itopsbackend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
            docker login --username AWS --password-stdin $ECR_ACCOUNT_URL

      - name: Clean old containers and images
        run: |
          docker ps -a -q | xargs -r docker rm -f
          docker images -a -q | xargs -r docker rmi -f

      - name: Build and push Backend image
        run: |
          docker build -t $BACKEND_IMAGE ./Backend
          docker tag $BACKEND_IMAGE:latest $ECR_ACCOUNT_URL/$BACKEND_IMAGE:latest
          docker push $ECR_ACCOUNT_URL/$BACKEND_IMAGE:latest

      - name: Build and push Frontend image
        run: |
          docker build -t $FRONTEND_IMAGE ./UI_Copy
          docker tag $FRONTEND_IMAGE:latest $ECR_ACCOUNT_URL/$FRONTEND_IMAGE:latest
          docker push $ECR_ACCOUNT_URL/$FRONTEND_IMAGE:latest

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/deployment
            docker-compose down
            docker-compose pull
            docker-compose up -d
