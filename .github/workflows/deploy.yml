name: Deploy Backend & Frontend to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # -------------------------------
      # Step 1: Checkout code
      # -------------------------------
      - name: Checkout repository
        uses: actions/checkout@v3

      # -------------------------------
      # Step 2: Configure AWS credentials
      # -------------------------------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      # -------------------------------
      # Step 3: Create configuration.py from secret
      # -------------------------------
      - name: Generate configuration.py
        run: |
          mkdir -p Backend/project/llm_app
          echo "${{ secrets.configuration }}" | sed 's/^/config = /' > Backend/project/llm_app/configuration.py

      # -------------------------------
      # Step 4: Ensure ECR repositories exist
      # -------------------------------
      - name: Ensure ECR repositories exist
        run: |
          for REPO in itopsbackend itopsfrontend; do
            aws ecr describe-repositories --repository-names $REPO || \
            aws ecr create-repository --repository-name $REPO
          done

      # -------------------------------
      # Step 5: Login to ECR
      # -------------------------------
      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1

      # -------------------------------
      # Step 6: Build & Push Backend Docker Image
      # -------------------------------
      - name: Build & Push Backend Docker Image
        run: |
          IMAGE_URI=361568250748.dkr.ecr.us-west-1.amazonaws.com/itopsbackend:latest
          docker build -t backend Backend/project/llm_app
          docker tag backend:latest $IMAGE_URI
          docker push $IMAGE_URI

      # -------------------------------
      # Step 7: Build & Push Frontend Docker Image
      # -------------------------------
      - name: Build & Push Frontend Docker Image
        run: |
          IMAGE_URI=361568250748.dkr.ecr.us-west-1.amazonaws.com/itopsfrontend:latest
          docker build -t frontend Backend/frontend
          docker tag frontend:latest $IMAGE_URI
          docker push $IMAGE_URI

      # -------------------------------
      # Step 8: Deploy containers on EC2
      # -------------------------------
      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Install Docker if not installed
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo yum update -y || sudo apt-get update -y
              if [ -x "$(command -v yum)" ]; then
                sudo amazon-linux-extras install docker -y
              else
                sudo apt-get install docker.io -y
              fi
              sudo service docker start
              sudo usermod -a -G docker $USER
            fi

            # Deploy backend container
            docker pull 361568250748.dkr.ecr.us-west-1.amazonaws.com/itopsbackend:latest
            docker stop backend || true
            docker rm backend || true
            docker run -d --name backend -p 8000:8000 \
              -e VAULT_TOKEN="${{ secrets.vault_token }}" \
              361568250748.dkr.ecr.us-west-1.amazonaws.com/itopsbackend:latest

            # Deploy frontend container
            docker pull 361568250748.dkr.ecr.us-west-1.amazonaws.com/itopsfrontend:latest
            docker stop frontend || true
            docker rm frontend || true
            docker run -d --name frontend -p 80:80 \
              361568250748.dkr.ecr.us-west-1.amazonaws.com/itopsfrontend:latest
          EOF
